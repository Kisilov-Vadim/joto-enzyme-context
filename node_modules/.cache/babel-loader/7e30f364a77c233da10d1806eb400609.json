{"ast":null,"code":"import _slicedToArray from \"/Users/vadimkisilov/Desktop/My Projects/Jest-Enzyme-Training/udemy-react-testing-projects/jotto-hooks-context/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vadimkisilov/Desktop/My Projects/Jest-Enzyme-Training/udemy-react-testing-projects/jotto-hooks-context/src/GuessedWords.js\";\nimport React from 'react';\nimport guessedWordsContext from './contexts/guessedWordsContext';\nimport languageContext from './contexts/languageContext';\nimport stringsModule from './helpers/strings';\n\nconst GuessedWords = () => {\n  const _guessedWordsContext$ = guessedWordsContext.useGuessedWords(),\n        _guessedWordsContext$2 = _slicedToArray(_guessedWordsContext$, 1),\n        guessedWords = _guessedWordsContext$2[0];\n\n  const language = React.useContext(languageContext);\n  let contents;\n\n  if (guessedWords.length === 0) {\n    contents = React.createElement(\"span\", {\n      \"data-test\": \"guess-instructions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, stringsModule.getStringByLanguage(language, 'guessPrompt'));\n  } else {\n    const guessedWordsRows = guessedWords.map((word, index) => React.createElement(\"tr\", {\n      \"data-test\": \"guessed-word\",\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, word.guessedWord), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, word.letterMatchCount)));\n    contents = React.createElement(\"div\", {\n      \"data-test\": \"guessed-words\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, stringsModule.getStringByLanguage(language, 'guessedWords')), React.createElement(\"table\", {\n      className: \"table table-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"thead-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, stringsModule.getStringByLanguage(language, 'guessColumnHeader')), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, stringsModule.getStringByLanguage(language, 'matchingLettersColumnHeader')))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, guessedWordsRows)));\n  }\n\n  return React.createElement(\"div\", {\n    \"data-test\": \"component-guessed-words\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, contents);\n};\n\nexport default GuessedWords;","map":{"version":3,"sources":["/Users/vadimkisilov/Desktop/My Projects/Jest-Enzyme-Training/udemy-react-testing-projects/jotto-hooks-context/src/GuessedWords.js"],"names":["React","guessedWordsContext","languageContext","stringsModule","GuessedWords","useGuessedWords","guessedWords","language","useContext","contents","length","getStringByLanguage","guessedWordsRows","map","word","index","guessedWord","letterMatchCount"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,OAAOC,aAAP,MAA0B,mBAA1B;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA,gCACFH,mBAAmB,CAACI,eAApB,EADE;AAAA;AAAA,QAClBC,YADkB;;AAEzB,QAAMC,QAAQ,GAAGP,KAAK,CAACQ,UAAN,CAAiBN,eAAjB,CAAjB;AACA,MAAIO,QAAJ;;AACA,MAAIH,YAAY,CAACI,MAAb,KAAwB,CAA5B,EAA+B;AAC7BD,IAAAA,QAAQ,GACN;AAAM,mBAAU,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,aAAa,CAACQ,mBAAd,CAAkCJ,QAAlC,EAA4C,aAA5C,CADH,CADF;AAKD,GAND,MAMO;AACL,UAAMK,gBAAgB,GAAGN,YAAY,CAACO,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KACxC;AAAI,mBAAU,cAAd;AAA6B,MAAA,GAAG,EAAGA,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,IAAI,CAACE,WAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMF,IAAI,CAACG,gBAAX,CAFF,CADuB,CAAzB;AAMAR,IAAAA,QAAQ,GACN;AAAK,mBAAU,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,aAAa,CAACQ,mBAAd,CAAkCJ,QAAlC,EAA4C,cAA5C,CAAL,CADF,EAEE;AAAO,MAAA,SAAS,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,aAAa,CAACQ,mBAAd,CAAkCJ,QAAlC,EAA4C,mBAA5C,CAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,aAAa,CAACQ,mBAAd,CAAkCJ,QAAlC,EAA4C,6BAA5C,CAAL,CAFF,CADF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIK,gBADJ,CAPF,CAFF,CADF;AAgBD;;AACD,SACE;AAAK,iBAAU,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIH,QADJ,CADF;AAKD,CAvCD;;AAyCA,eAAeL,YAAf","sourcesContent":["import React from 'react';\n\nimport guessedWordsContext from './contexts/guessedWordsContext';\nimport languageContext from './contexts/languageContext';\nimport stringsModule from './helpers/strings';\n\nconst GuessedWords = () => {\n  const [guessedWords] = guessedWordsContext.useGuessedWords();\n  const language = React.useContext(languageContext);\n  let contents\n  if (guessedWords.length === 0) {\n    contents = (\n      <span data-test=\"guess-instructions\">\n        {stringsModule.getStringByLanguage(language, 'guessPrompt')}\n      </span>\n    );\n  } else {\n    const guessedWordsRows = guessedWords.map((word, index) => (\n      <tr data-test=\"guessed-word\" key={ index }>\n        <td>{ word.guessedWord }</td>\n        <td>{ word.letterMatchCount }</td>\n      </tr>\n    ));\n    contents = (\n      <div data-test=\"guessed-words\">\n        <h3>{stringsModule.getStringByLanguage(language, 'guessedWords')}</h3>\n        <table className=\"table table-sm\">\n          <thead className=\"thead-light\">\n            <tr>\n              <th>{stringsModule.getStringByLanguage(language, 'guessColumnHeader')}</th>\n              <th>{stringsModule.getStringByLanguage(language, 'matchingLettersColumnHeader')}</th>\n            </tr>\n          </thead>\n          <tbody>\n            { guessedWordsRows }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n  return (\n    <div data-test=\"component-guessed-words\">\n      { contents }\n    </div>\n  );\n};\n\nexport default GuessedWords;\n"]},"metadata":{},"sourceType":"module"}